using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace Gibbed.LetUsClingTogether.FileFormats.Script
{
    public static class OpcodeHelpers
    {
        public static int GetUnknown04(this Opcode opcode) => opcode switch
        {
            Opcode.Unknown0 => 0,
            Opcode.Undefined1 => 0,
            Opcode.Undefined2 => 0,
            Opcode.Return => 0,
            Opcode.Pop => 0,
            Opcode.Either => 1,
            Opcode.Both => 1,
            Opcode.Or => 1,
            Opcode.ExclusiveOr => 1,
            Opcode.And => 1,
            Opcode.Equal => 2,
            Opcode.NotEqual => 2,
            Opcode.GreaterThan => 2,
            Opcode.LessThan => 2,
            Opcode.GreaterThanOrEqual => 2,
            Opcode.LessThanOrEqual => 2,
            Opcode.ShiftLeft => 1,
            Opcode.ShiftRight => 1,
            Opcode.Add => 2,
            Opcode.Subtract => 2,
            Opcode.Multiply => 2,
            Opcode.Divide => 2,
            Opcode.Modulo => 2,
            Opcode.Not => 1,
            Opcode.Negate => 1,
            Opcode.Undefined25 => 0,
            Opcode.Undefined26 => 0,
            Opcode.PushFoo => 0,
            Opcode.PopFoo => 0,
            Opcode.PushBar => 0,
            Opcode.PushBaz => 0,
            Opcode.PopBar => 0,
            Opcode.PopBaz => 0,
            Opcode.Unknown33 => 0,
            Opcode.Unknown34 => 0,
            Opcode.Unknown35 => 0,
            Opcode.Unknown36 => 0,
            Opcode.Unknown37 => 0,
            Opcode.Unknown38 => 0,
            Opcode.Unknown39 => 0,
            Opcode.Unknown40 => 0,
            Opcode.Unknown41 => 0,
            Opcode.NoOperation42 => 0,
            Opcode.NoOperation43 => 0,
            Opcode.NoOperation44 => 0,
            Opcode.UnknownJump45 => 0,
            Opcode.UnknownJump46 => 0,
            Opcode.UnknownJump47 => 0,
            Opcode.UnknownJump48 => 0,
            Opcode.Undefined49 => 0,
            Opcode.Unknown50 => 0,
            Opcode.NoOperation51 => 0,
            Opcode.Unknown52 => 0,
            Opcode.Unknown53 => 0,
            Opcode.PopIntParam38 => 0,
            Opcode.PopIntParam3C => 0,
            Opcode.PopIntParam40 => 0,
            Opcode.PopIntParam44 => 0,
            Opcode.PopFloatParam48 => 0,
            Opcode.PopFloatParam4C => 0,
            Opcode.PopFloatParam50 => 0,
            Opcode.PopFloatParam54 => 0,
            Opcode.PushIntParam38 => 0,
            Opcode.PushIntParam3C => 0,
            Opcode.PushIntParam40 => 0,
            Opcode.PushIntParam44 => 0,
            Opcode.PushFloatParam48 => 0,
            Opcode.PushFloatParam4C => 0,
            Opcode.PushFloatParam50 => 0,
            Opcode.PushFloatParam54 => 0,
            Opcode.Undefined70 => 0,
            Opcode.Undefined71 => 0,
            Opcode.MaybeGetVariable => 0,
            Opcode.Unknown73 => 0,
            Opcode.Unknown74 => 0,
            Opcode.MaybeSetVariable => 0,
            Opcode.PushUnknown76 => 0,
            Opcode.PushUnknown77 => 0,
            Opcode.PushUnknown78 => 0,
            Opcode.PushInt => 0,
            Opcode.Unknown80 => 0,
            Opcode.Unknown81 => 0,
            Opcode.UnknownBazEquals => 0,
            Opcode.UnknownBazGreaterThan => 0,
            Opcode.UnknownBazGreaterThanOrEqual => 0,
            Opcode.UnknownBazLessThan => 0,
            Opcode.UnknownBazLessThanOrEqual => 0,
            Opcode.UnknownBazLessThanOrEqual_Two => 0,
            Opcode.UnknownBar88 => 0,
            Opcode.UnknownBar89 => 0,
            Opcode.UnknownBar90 => 0,
            Opcode.UnknownBar91 => 0,
            Opcode.UnknownBar92 => 0,
            Opcode.CallNative => 0,
            Opcode.UnknownBar94 => 0,
            Opcode.Unknown95 => 0,
            Opcode.Unknown96 => 0,
            Opcode.Unknown97 => 0,
            Opcode.Unknown98 => 0,
            Opcode.Unknown99 => 0,
            _ => throw new ArgumentOutOfRangeException(nameof(opcode)),
        };

        public static int GetUnknown08(this Opcode opcode) => opcode switch
        {
            Opcode.Unknown0 => 0,
            Opcode.Undefined1 => 0,
            Opcode.Undefined2 => 0,
            Opcode.Return => 0,
            Opcode.Pop => 0,
            Opcode.Either => 1,
            Opcode.Both => 1,
            Opcode.Or => 1,
            Opcode.ExclusiveOr => 1,
            Opcode.And => 1,
            Opcode.Equal => 1,
            Opcode.NotEqual => 1,
            Opcode.GreaterThan => 1,
            Opcode.LessThan => 1,
            Opcode.GreaterThanOrEqual => 1,
            Opcode.LessThanOrEqual => 1,
            Opcode.ShiftLeft => 1,
            Opcode.ShiftRight => 1,
            Opcode.Add => 2,
            Opcode.Subtract => 2,
            Opcode.Multiply => 2,
            Opcode.Divide => 2,
            Opcode.Modulo => 2,
            Opcode.Not => 1,
            Opcode.Negate => 1,
            Opcode.Undefined25 => 0,
            Opcode.Undefined26 => 0,
            Opcode.PushFoo => 0,
            Opcode.PopFoo => 0,
            Opcode.PushBar => 0,
            Opcode.PushBaz => 0,
            Opcode.PopBar => 0,
            Opcode.PopBaz => 0,
            Opcode.Unknown33 => 0,
            Opcode.Unknown34 => 0,
            Opcode.Unknown35 => 0,
            Opcode.Unknown36 => 0,
            Opcode.Unknown37 => 0,
            Opcode.Unknown38 => 0,
            Opcode.Unknown39 => 0,
            Opcode.Unknown40 => 0,
            Opcode.Unknown41 => 0,
            Opcode.NoOperation42 => 0,
            Opcode.NoOperation43 => 0,
            Opcode.NoOperation44 => 0,
            Opcode.UnknownJump45 => 0,
            Opcode.UnknownJump46 => 0,
            Opcode.UnknownJump47 => 0,
            Opcode.UnknownJump48 => 0,
            Opcode.Undefined49 => 0,
            Opcode.Unknown50 => 0,
            Opcode.NoOperation51 => 0,
            Opcode.Unknown52 => 0,
            Opcode.Unknown53 => 0,
            Opcode.PopIntParam38 => 0,
            Opcode.PopIntParam3C => 0,
            Opcode.PopIntParam40 => 0,
            Opcode.PopIntParam44 => 0,
            Opcode.PopFloatParam48 => 0,
            Opcode.PopFloatParam4C => 0,
            Opcode.PopFloatParam50 => 0,
            Opcode.PopFloatParam54 => 0,
            Opcode.PushIntParam38 => 0,
            Opcode.PushIntParam3C => 0,
            Opcode.PushIntParam40 => 0,
            Opcode.PushIntParam44 => 0,
            Opcode.PushFloatParam48 => 0,
            Opcode.PushFloatParam4C => 0,
            Opcode.PushFloatParam50 => 0,
            Opcode.PushFloatParam54 => 0,
            Opcode.Undefined70 => 0,
            Opcode.Undefined71 => 0,
            Opcode.MaybeGetVariable => 0,
            Opcode.Unknown73 => 0,
            Opcode.Unknown74 => 0,
            Opcode.MaybeSetVariable => 0,
            Opcode.PushUnknown76 => 0,
            Opcode.PushUnknown77 => 0,
            Opcode.PushUnknown78 => 0,
            Opcode.PushInt => 0,
            Opcode.Unknown80 => 0,
            Opcode.Unknown81 => 0,
            Opcode.UnknownBazEquals => 0,
            Opcode.UnknownBazGreaterThan => 0,
            Opcode.UnknownBazGreaterThanOrEqual => 0,
            Opcode.UnknownBazLessThan => 0,
            Opcode.UnknownBazLessThanOrEqual => 0,
            Opcode.UnknownBazLessThanOrEqual_Two => 0,
            Opcode.UnknownBar88 => 0,
            Opcode.UnknownBar89 => 0,
            Opcode.UnknownBar90 => 0,
            Opcode.UnknownBar91 => 0,
            Opcode.UnknownBar92 => 0,
            Opcode.CallNative => 0,
            Opcode.UnknownBar94 => 0,
            Opcode.Unknown95 => 0,
            Opcode.Unknown96 => 0,
            Opcode.Unknown97 => 0,
            Opcode.Unknown98 => 0,
            Opcode.Unknown99 => 0,
            _ => throw new ArgumentOutOfRangeException(nameof(opcode)),
        };

        public static int GetSize(this Opcode opcode) => opcode switch
        {
            Opcode.Unknown0 => 0,
            Opcode.Undefined1 => 0,
            Opcode.Undefined2 => 0,
            Opcode.Return => 1,
            Opcode.Pop => 1,
            Opcode.Either => 1,
            Opcode.Both => 1,
            Opcode.Or => 1,
            Opcode.ExclusiveOr => 1,
            Opcode.And => 1,
            Opcode.Equal => 1,
            Opcode.NotEqual => 1,
            Opcode.GreaterThan => 1,
            Opcode.LessThan => 1,
            Opcode.GreaterThanOrEqual => 1,
            Opcode.LessThanOrEqual => 1,
            Opcode.ShiftLeft => 1,
            Opcode.ShiftRight => 1,
            Opcode.Add => 1,
            Opcode.Subtract => 1,
            Opcode.Multiply => 1,
            Opcode.Divide => 1,
            Opcode.Modulo => 1,
            Opcode.Not => 1,
            Opcode.Negate => 1,
            Opcode.Undefined25 => 1,
            Opcode.Undefined26 => 1,
            Opcode.PushFoo => 1,
            Opcode.PopFoo => 1,
            Opcode.PushBar => 1,
            Opcode.PushBaz => 1,
            Opcode.PopBar => 1,
            Opcode.PopBaz => 1,
            Opcode.Unknown33 => 1,
            Opcode.Unknown34 => 1,
            Opcode.Unknown35 => 1,
            Opcode.Unknown36 => 1,
            Opcode.Unknown37 => 1,
            Opcode.Unknown38 => 1,
            Opcode.Unknown39 => 1,
            Opcode.Unknown40 => 1,
            Opcode.Unknown41 => 1,
            Opcode.NoOperation42 => 1,
            Opcode.NoOperation43 => 1,
            Opcode.NoOperation44 => 1,
            Opcode.UnknownJump45 => 1,
            Opcode.UnknownJump46 => 1,
            Opcode.UnknownJump47 => 1,
            Opcode.UnknownJump48 => 1,
            Opcode.Undefined49 => 1,
            Opcode.Unknown50 => 1,
            Opcode.NoOperation51 => 1,
            Opcode.Unknown52 => 1,
            Opcode.Unknown53 => 1,
            Opcode.PopIntParam38 => 1,
            Opcode.PopIntParam3C => 1,
            Opcode.PopIntParam40 => 1,
            Opcode.PopIntParam44 => 1,
            Opcode.PopFloatParam48 => 1,
            Opcode.PopFloatParam4C => 1,
            Opcode.PopFloatParam50 => 1,
            Opcode.PopFloatParam54 => 1,
            Opcode.PushIntParam38 => 1,
            Opcode.PushIntParam3C => 1,
            Opcode.PushIntParam40 => 1,
            Opcode.PushIntParam44 => 1,
            Opcode.PushFloatParam48 => 1,
            Opcode.PushFloatParam4C => 1,
            Opcode.PushFloatParam50 => 1,
            Opcode.PushFloatParam54 => 1,
            Opcode.Undefined70 => 1,
            Opcode.Undefined71 => 1,
            Opcode.MaybeGetVariable => 3,
            Opcode.Unknown73 => 3,
            Opcode.Unknown74 => 3,
            Opcode.MaybeSetVariable => 3,
            Opcode.PushUnknown76 => 3,
            Opcode.PushUnknown77 => 3,
            Opcode.PushUnknown78 => 3,
            Opcode.PushInt => 3,
            Opcode.Unknown80 => 3,
            Opcode.Unknown81 => 3,
            Opcode.UnknownBazEquals => 3,
            Opcode.UnknownBazGreaterThan => 3,
            Opcode.UnknownBazGreaterThanOrEqual => 3,
            Opcode.UnknownBazLessThan => 3,
            Opcode.UnknownBazLessThanOrEqual => 3,
            Opcode.UnknownBazLessThanOrEqual_Two => 3,
            Opcode.UnknownBar88 => 3,
            Opcode.UnknownBar89 => 3,
            Opcode.UnknownBar90 => 3,
            Opcode.UnknownBar91 => 3,
            Opcode.UnknownBar92 => 3,
            Opcode.CallNative => 3,
            Opcode.UnknownBar94 => 3,
            Opcode.Unknown95 => 3,
            Opcode.Unknown96 => 3,
            Opcode.Unknown97 => 3,
            Opcode.Unknown98 => 3,
            Opcode.Unknown99 => 3,
            _ => throw new ArgumentOutOfRangeException(nameof(opcode)),
        };

        public static int GetUnknown0E(this Opcode opcode) => opcode switch
        {
            Opcode.Unknown0 => 0,
            Opcode.Undefined1 => 8,
            Opcode.Undefined2 => 7,
            Opcode.Return => 0,
            Opcode.Pop => 0,
            Opcode.Either => 0,
            Opcode.Both => 0,
            Opcode.Or => 0,
            Opcode.ExclusiveOr => 0,
            Opcode.And => 0,
            Opcode.Equal => 0,
            Opcode.NotEqual => 0,
            Opcode.GreaterThan => 0,
            Opcode.LessThan => 0,
            Opcode.GreaterThanOrEqual => 0,
            Opcode.LessThanOrEqual => 0,
            Opcode.ShiftLeft => 0,
            Opcode.ShiftRight => 0,
            Opcode.Add => 0,
            Opcode.Subtract => 0,
            Opcode.Multiply => 0,
            Opcode.Divide => 0,
            Opcode.Modulo => 0,
            Opcode.Not => 0,
            Opcode.Negate => 0,
            Opcode.Undefined25 => 0,
            Opcode.Undefined26 => 0,
            Opcode.PushFoo => 0,
            Opcode.PopFoo => 0,
            Opcode.PushBar => 0,
            Opcode.PushBaz => 0,
            Opcode.PopBar => 0,
            Opcode.PopBaz => 0,
            Opcode.Unknown33 => 0,
            Opcode.Unknown34 => 0,
            Opcode.Unknown35 => 0,
            Opcode.Unknown36 => 0,
            Opcode.Unknown37 => 0,
            Opcode.Unknown38 => 0,
            Opcode.Unknown39 => 0,
            Opcode.Unknown40 => 0,
            Opcode.Unknown41 => 0,
            Opcode.NoOperation42 => 0,
            Opcode.NoOperation43 => 0,
            Opcode.NoOperation44 => 0,
            Opcode.UnknownJump45 => 0,
            Opcode.UnknownJump46 => 0,
            Opcode.UnknownJump47 => 0,
            Opcode.UnknownJump48 => 0,
            Opcode.Undefined49 => 0,
            Opcode.Unknown50 => 0,
            Opcode.NoOperation51 => 0,
            Opcode.Unknown52 => 0,
            Opcode.Unknown53 => 0,
            Opcode.PopIntParam38 => 0,
            Opcode.PopIntParam3C => 0,
            Opcode.PopIntParam40 => 0,
            Opcode.PopIntParam44 => 0,
            Opcode.PopFloatParam48 => 0,
            Opcode.PopFloatParam4C => 0,
            Opcode.PopFloatParam50 => 0,
            Opcode.PopFloatParam54 => 0,
            Opcode.PushIntParam38 => 0,
            Opcode.PushIntParam3C => 0,
            Opcode.PushIntParam40 => 0,
            Opcode.PushIntParam44 => 0,
            Opcode.PushFloatParam48 => 0,
            Opcode.PushFloatParam4C => 0,
            Opcode.PushFloatParam50 => 0,
            Opcode.PushFloatParam54 => 0,
            Opcode.Undefined70 => 0,
            Opcode.Undefined71 => 0,
            Opcode.MaybeGetVariable => 3,
            Opcode.Unknown73 => 3,
            Opcode.Unknown74 => 3,
            Opcode.MaybeSetVariable => 3,
            Opcode.PushUnknown76 => 2,
            Opcode.PushUnknown77 => 2,
            Opcode.PushUnknown78 => 2,
            Opcode.PushInt => 1,
            Opcode.Unknown80 => 5,
            Opcode.Unknown81 => 8,
            Opcode.UnknownBazEquals => 8,
            Opcode.UnknownBazGreaterThan => 8,
            Opcode.UnknownBazGreaterThanOrEqual => 8,
            Opcode.UnknownBazLessThan => 8,
            Opcode.UnknownBazLessThanOrEqual => 8,
            Opcode.UnknownBazLessThanOrEqual_Two => 8,
            Opcode.UnknownBar88 => 4,
            Opcode.UnknownBar89 => 4,
            Opcode.UnknownBar90 => 8,
            Opcode.UnknownBar91 => 8,
            Opcode.UnknownBar92 => 8,
            Opcode.CallNative => 4,
            Opcode.UnknownBar94 => 4,
            Opcode.Unknown95 => 6,
            Opcode.Unknown96 => 8,
            Opcode.Unknown97 => 6,
            Opcode.Unknown98 => 0,
            Opcode.Unknown99 => 6,
            _ => throw new ArgumentOutOfRangeException(nameof(opcode)),
        };
    }
}
